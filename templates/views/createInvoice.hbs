<!DOCTYPE html>
<html lang="en">

<head>
    {{>head}}
</head>

<body>
    <!-- Main Wrapper -->
    <div class="main-wrapper">

        <!-- Header -->
        {{>header}}
        <!-- /Header -->

        <!-- Sidebar -->
        {{>sidebar}}
        <!-- /Sidebar -->

        <!-- Page Wrapper -->
        <div class="page-wrapper">

            <div class="content container-fluid">
                <div class="page-header">
                    <div class="row align-items-center">
                        <div class="col">
                            <h3 class="page-title">Invoice</h3>
                            <ul class="breadcrumb">
                                <li class="breadcrumb-item"><a href="index">Home</a></li>
                                <li class="breadcrumb-item active">Invoice</li>
                            </ul>
                        </div>
                    </div>
                </div>
                {{>Invoicecalculate}}
            </div>

        </div>

    </div>
    <!-- /Page Wrapper -->

    </div>
    <!-- /Main Wrapper -->

    {{>js}}

</body>
<script>

   

    invno()
    option()
    function invno() {
        var today = new Date();
        var a = today.getFullYear();
        var ivno = Math.ceil(10000 * Math.random());
        document.getElementById("txtinv").value = "INV-" + a + "-" + ivno;
    }

    function additem() {
        event.preventDefault();
        if (document.getElementById("date").value.trim() == "") {
            document.getElementById("error5").innerHTML = "Enter Date "
        } else {




            var table = document.getElementById("tbd");
            const html = `
        <tr>

									<td>
										<input class="form-control" type="text" style="min-width:150px">
									</td>
									<td>
										<input class="form-control" type="text" style="min-width:150px" >
									</td>
									<td>
										<input class="saccode form-control" min="0"  style="width:100px" type="number" >
									</td>
									<td>
										<input class="netamount form-control" onchange="calculate(this)" min="0"  style="width:100px" type="number" >
									</td>
									<td>
										<input class="cgst form-control" onchange="calculate(this)" min="0"  style="width:80px" type="number" >
									</td>
									<td>
										<input class="cgstamount form-control" onchange="calculate(this)" min="0"  style="width:80px" type="number" disabled>
									</td>
									<td>
										<input class="sgst form-control" onchange="calculate(this)" min="0"  style="width:80px" type="number" >
									</td>
									<td>
										<input class="sgstamount form-control" onchange="calculate(this)" min="0"  style="width:80px" type="number" disabled>
									</td>
									<td>
										<input class="igst form-control" onchange="calculate(this)" min="0" style="width:80px" type="number" >
									</td>
									<td>
										<input class="igstamount form-control" onchange="calculate(this)" min="0" style="width:80px" type="number" disabled >
									</td>
									<td>
										<input class="total form-control" disabled style="width:120px" type="text" >
									</td>
                                    <td><a onclick="Delete(this)" class="text-danger font-18" title="Remove"><i class="fa fa-trash-o"></i></a></td>
								</tr>
        `
            var newRow = table.insertRow(table.rows.length);
            newRow.innerHTML = html;
        }
    }
    function Delete(a) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire(
                    'Deleted!',
                    'Your file has been deleted.',
                    'success'
                )
                a.closest('tr').remove();
            }
            total(this);
            cgst(this);
        sgst(this);
        igst(this);
        })

    }



    function calculate(e) {
        var tr = e.parentElement.parentElement;

        var NetAmount = tr.getElementsByClassName('netamount')[0].value;
        var Cgst = tr.getElementsByClassName('cgst')[0].value;
        var Sgst = tr.getElementsByClassName('sgst')[0].value;
        var Igst = tr.getElementsByClassName('igst')[0].value;
        var c1 = parseFloat((Cgst * NetAmount) / 100);
        tr.getElementsByClassName('cgstamount')[0].value = c1;
        var c2 = parseFloat((Sgst * NetAmount) / 100);
        tr.getElementsByClassName('sgstamount')[0].value = c2;
        var c3 = parseFloat((Igst * NetAmount) / 100);
        tr.getElementsByClassName('igstamount')[0].value = c3;
        var ttl = (parseInt(NetAmount) + c1 + c2 + c3).toFixed(2);
        tr.getElementsByClassName('total')[0].value = ttl;
        
        total(this);
        cgst(this);
        sgst(this);
        igst(this);


    }

    function total(b) {
        var table = document.getElementById("tbd");
        let total = 0;
        for (var j = 0; j < table.childElementCount; j++) {
            var x = document.getElementById("tbd").rows[j].cells[10].getElementsByTagName('input')[0].value.trim();
            total += parseInt(x);

        }
        //console.log(total)
        document.getElementById("txttotal").innerHTML = total;
    }
    function cgst(c) {
        var table = document.getElementById("tbd");
        let cgst = 0;
        for (var j = 0; j < table.childElementCount; j++) {
            var x = document.getElementById("tbd").rows[j].cells[5].getElementsByTagName('input')[0].value.trim();
            cgst += parseInt(x);

        }
        //console.log(total)
        document.getElementById("cgsttotal").innerHTML = cgst;
    }
    function sgst(d) {
        var table = document.getElementById("tbd");
        let sgst = 0;
        for (var j = 0; j < table.childElementCount; j++) {
            var x = document.getElementById("tbd").rows[j].cells[7].getElementsByTagName('input')[0].value.trim();
            sgst += parseInt(x);

        }
        //console.log(total)
        document.getElementById("sgsttotal").innerHTML = sgst;
    }
    function igst(f) {
        var table = document.getElementById("tbd");
        let igst = 0;
        for (var j = 0; j < table.childElementCount; j++) {
            var x = document.getElementById("tbd").rows[j].cells[9].getElementsByTagName('input')[0].value.trim();
            igst += parseInt(x);

        }
        //console.log(total)
        document.getElementById("igsttotal").innerHTML = igst;
    }

    
    function store() {
        event.preventDefault();
        var isv = itemvalid();
        if (isv == "") {
            var table = document.getElementById("tbd");
            var invono = document.getElementById("txtinv").value;
            var cname = document.getElementById("cname").value;
            var date = document.getElementById("date").value;
            var cgst = document.getElementById("cgsttotal").innerText;
            var sgst = document.getElementById("sgsttotal").innerText;
            var igst = document.getElementById("igsttotal").innerText;
            var gttl = document.getElementById("txttotal").innerText;
            var ary = [];

            for (var m = 0; m < table.childElementCount; m++) {
                let row = table.rows[m]
                var item = document.getElementById("tbd").rows[m].cells[0].getElementsByTagName('input')[0].value;
                var sdescription = document.getElementById("tbd").rows[m].cells[1].getElementsByTagName('input')[0].value;
                var scode = document.getElementById("tbd").rows[m].cells[2].getElementsByTagName('input')[0].value;
                var namunt = document.getElementById("tbd").rows[m].cells[3].getElementsByTagName('input')[0].value;
                var cgst1 = document.getElementById("tbd").rows[m].cells[4].getElementsByTagName('input')[0].value;
                var cgstamount = document.getElementById("tbd").rows[m].cells[5].getElementsByTagName('input')[0].value;
                var igst1 = document.getElementById("tbd").rows[m].cells[6].getElementsByTagName('input')[0].value;
                var igstamount = document.getElementById("tbd").rows[m].cells[7].getElementsByTagName('input')[0].value;
                var sgst1 = document.getElementById("tbd").rows[m].cells[8].getElementsByTagName('input')[0].value;
                var sgstamount = document.getElementById("tbd").rows[m].cells[9].getElementsByTagName('input')[0].value;
                var ttl = document.getElementById("tbd").rows[m].cells[10].getElementsByTagName('input')[0].value;
                ary.push({ ItemName:item,Service_Description:sdescription,SAC_code:scode,Net_Amount:namunt,CGST:cgst1,CGST_Amount:cgstamount,IGST:igst1,IGST_Amount:igstamount,SGST:sgst1,SGST_Amount:sgstamount,Total:ttl})
            }
            console.log(ary)
            //console.log(gttl)

            const getToken = localStorage.getItem("Token")
            const token = "Bearer" + " " + getToken
            var myHeaders = new Headers();
            myHeaders.append("Authorization", token);
            myHeaders.append("Content-Type", "application/json");
            var data = {
                Invoic_Number: invono,
                Customer_Name: cname,
                Date: date,
                InvoiceItem:ary,
                CGST_Total:cgst,
                SGST_Total:igst,
                IGST_Total:sgst,
                Grand_Total:gttl
            }
            var raw = JSON.stringify(data);


            var requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: raw,
                redirect: 'follow'
                
            };

            fetch("http://127.0.0.1:3647/api/invoice/create", requestOptions)
                .then(response => response.json())
                .then(result => {
                    if (!result.error) {
                        Swal.fire({
                            // position: 'top-end',
                            icon: 'success',
                            title: 'Add Sucessful',
                            showConfirmButton: false,
                            timer: 3000
                        })
                        setTimeout(function () {
                            window.location.href = "invoice";
                        }, 3000);
                    } else {
                        document.getElementById("error6").innerHTML = result.message
                    }
                })
                .catch(error => console.log('error', error));


        } else {
            document.getElementById("error6").innerHTML = isv;
        }
    }
    function itemvalid() {
        var table = document.getElementById("tbd");
        var valid = "";
        for (var n = 0; n < table.childElementCount; n++) {
            let row = table.rows[n]
            if (document.getElementById("tbd").rows[n].cells[0].getElementsByTagName('input')[0].value.trim() == "" && document.getElementById("tbd").rows[n].cells[1].getElementsByTagName('input')[0].value.trim() == "" && document.getElementById("tbd").rows[n].cells[2].getElementsByTagName('input')[0].value.trim() == "" && document.getElementById("tbd").rows[n].cells[3].getElementsByTagName('input')[0].value.trim() == "" && document.getElementById("tbd").rows[n].cells[4].getElementsByTagName('input')[0].value.trim() == "" && document.getElementById("tbd").rows[n].cells[5].getElementsByTagName('input')[0].value.trim() == "" && document.getElementById("tbd").rows[n].cells[6].getElementsByTagName('input')[0].value.trim() == "") {
                valid = "Enter Item , Service Description , Net Amount , CGST , SGST and IGST";
            } else if (document.getElementById("tbd").rows[n].cells[0].getElementsByTagName('input')[0].value.trim() == "") {
                valid = "Enter Item"
            } else if (document.getElementById("tbd").rows[n].cells[1].getElementsByTagName('input')[0].value.trim() == "") {
                valid = "Enter Service Description"
            } else if (document.getElementById("tbd").rows[n].cells[2].getElementsByTagName('input')[0].value.trim() == "") {
                valid = "Enter SAC Code"
            } else if (document.getElementById("tbd").rows[n].cells[3].getElementsByTagName('input')[0].value.trim() == "") {
                valid = "Enter Net Amount"
            } else if (document.getElementById("tbd").rows[n].cells[4].getElementsByTagName('input')[0].value.trim() == "") {
                valid = "Enter CGST"
            } else if (document.getElementById("tbd").rows[n].cells[5].getElementsByTagName('input')[0].value.trim() == "") {
                valid = "Enter SGST"
            } else if (document.getElementById("tbd").rows[n].cells[6].getElementsByTagName('input')[0].value.trim() == "") {
                valid = "Enter IGST"
            }
        }
        return valid;

    }

    function option() {

        var requestOptions = {
            method: 'GET',
            redirect: 'follow'
        };

        fetch("http://127.0.0.1:3647/api/customers", requestOptions)
            .then(response => response.json())
            .then(result => {
                var select = document.getElementById('cname');
                select.innerHTML = "";
                for (i = 0; i < result.data.length; i++) {
                    var cname = result.data[i].Customers_Name
                    //console.log(cname)
                    var template = `
                            <option value="${cname}">${cname}</option>
                    `
                    select.innerHTML += template;
                }
            })

            .catch(error => console.log('error', error))

    }


</script>

</html>